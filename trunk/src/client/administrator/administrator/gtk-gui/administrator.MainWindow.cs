// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.42
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Stetic.SteticGenerated {
    
    
    internal class administratorMainWindow {
        
        public static void Build(Gtk.Window cobj) {
            System.Collections.Hashtable bindings = new System.Collections.Hashtable();
            // Widget administrator.MainWindow
            Gtk.UIManager w1 = new Gtk.UIManager();
            Gtk.ActionGroup w2 = new Gtk.ActionGroup("Default");
            Gtk.Action w3 = new Gtk.Action("File", Mono.Unix.Catalog.GetString("File"), null, null);
            bindings["File"] = w3;
            w3.ShortLabel = "File";
            w2.Add(w3, null);
            Gtk.Action w4 = new Gtk.Action("Exit", Mono.Unix.Catalog.GetString("Exit"), null, null);
            bindings["Exit"] = w4;
            w4.ShortLabel = "Exit";
            w2.Add(w4, null);
            Gtk.Action w5 = new Gtk.Action("Edit", Mono.Unix.Catalog.GetString("Edit"), null, null);
            bindings["Edit"] = w5;
            w5.ShortLabel = "Edit";
            w2.Add(w5, null);
            Gtk.Action w6 = new Gtk.Action("Cut", Mono.Unix.Catalog.GetString("Cut"), null, null);
            bindings["Cut"] = w6;
            w6.ShortLabel = "Cut";
            w2.Add(w6, null);
            Gtk.Action w7 = new Gtk.Action("Copy", Mono.Unix.Catalog.GetString("Copy"), null, null);
            bindings["Copy"] = w7;
            w7.ShortLabel = "Copy";
            w2.Add(w7, null);
            Gtk.Action w8 = new Gtk.Action("Paste", Mono.Unix.Catalog.GetString("Paste"), null, null);
            bindings["Paste"] = w8;
            w8.ShortLabel = "Paste";
            w2.Add(w8, null);
            Gtk.Action w9 = new Gtk.Action("Help", Mono.Unix.Catalog.GetString("Help"), null, null);
            bindings["Help"] = w9;
            w9.ShortLabel = "Help";
            w2.Add(w9, null);
            Gtk.Action w10 = new Gtk.Action("About", Mono.Unix.Catalog.GetString("About"), null, null);
            bindings["About"] = w10;
            w10.ShortLabel = "About";
            w2.Add(w10, null);
            w1.InsertActionGroup(w2, 0);
            cobj.AddAccelGroup(w1.AccelGroup);
            cobj.Name = "administrator.MainWindow";
            cobj.Title = Mono.Unix.Catalog.GetString("Boxerp Administrator");
            cobj.WindowPosition = ((Gtk.WindowPosition)(4));
            cobj.DefaultWidth = 800;
            cobj.DefaultHeight = 600;
            // Container child administrator.MainWindow.Gtk.Container+ContainerChild
            Gtk.VBox w11 = new Gtk.VBox();
            bindings["vbox1"] = w11;
            w11.Name = "vbox1";
            // Container child vbox1.Gtk.Box+BoxChild
            w1.AddUiFromString("<ui><menubar name='menubar1'><menu action='File'><menuitem action='Exit'/></menu><menu action='Edit'><menuitem action='Cut'/><menuitem action='Copy'/><menuitem action='Paste'/></menu><menu action='Help'><menuitem action='About'/></menu></menubar></ui>");
            Gtk.MenuBar w12 = ((Gtk.MenuBar)(w1.GetWidget("/menubar1")));
            bindings["menubar1"] = w12;
            w12.Name = "menubar1";
            w11.Add(w12);
            Gtk.Box.BoxChild w13 = ((Gtk.Box.BoxChild)(w11[w12]));
            w13.Position = 0;
            w13.Expand = false;
            w13.Fill = false;
            // Container child vbox1.Gtk.Box+BoxChild
            w1.AddUiFromString("<ui><toolbar name='toolbar1'/></ui>");
            Gtk.Toolbar w14 = ((Gtk.Toolbar)(w1.GetWidget("/toolbar1")));
            bindings["toolbar1"] = w14;
            w14.Name = "toolbar1";
            w14.ShowArrow = false;
            w14.ToolbarStyle = ((Gtk.ToolbarStyle)(0));
            w14.IconSize = ((Gtk.IconSize)(3));
            w11.Add(w14);
            Gtk.Box.BoxChild w15 = ((Gtk.Box.BoxChild)(w11[w14]));
            w15.Position = 1;
            w15.Expand = false;
            w15.Fill = false;
            // Container child vbox1.Gtk.Box+BoxChild
            Gtk.VBox w16 = new Gtk.VBox();
            bindings["vbox2"] = w16;
            w16.Name = "vbox2";
            w16.BorderWidth = ((uint)(5));
            // Container child vbox2.Gtk.Box+BoxChild
            Gtk.HBox w17 = new Gtk.HBox();
            bindings["hbox1"] = w17;
            w17.Name = "hbox1";
            // Container child hbox1.Gtk.Box+BoxChild
            Gtk.Label w18 = new Gtk.Label();
            bindings["labelEnterprise"] = w18;
            w18.Events = ((Gdk.EventMask)(256));
            w18.Name = "labelEnterprise";
            w18.Ypad = 6;
            w18.LabelProp = "<b>Enterprise:</b>";
            w18.UseMarkup = true;
            w17.Add(w18);
            Gtk.Box.BoxChild w19 = ((Gtk.Box.BoxChild)(w17[w18]));
            w19.Position = 0;
            w19.Expand = false;
            w19.Fill = false;
            // Container child hbox1.Gtk.Box+BoxChild
            Gtk.Entry w20 = new Gtk.Entry();
            bindings["entryEnterprise"] = w20;
            w20.CanFocus = true;
            w20.Name = "entryEnterprise";
            w20.IsEditable = true;
            w20.InvisibleChar = '●';
            w17.Add(w20);
            Gtk.Box.BoxChild w21 = ((Gtk.Box.BoxChild)(w17[w20]));
            w21.Position = 1;
            w21.Expand = false;
            w21.Fill = false;
            // Container child hbox1.Gtk.Box+BoxChild
            Gtk.Button w22 = new Gtk.Button();
            bindings["buttonFindEnterprise"] = w22;
            Gtk.Tooltips w23 = new Gtk.Tooltips();
            w23.SetTip(w22, "Añadir un Hecho", "Añadir un Hecho");
            w22.HasDefault = true;
            w22.CanFocus = true;
            w22.Name = "buttonFindEnterprise";
            // Container child buttonFindEnterprise.Gtk.Container+ContainerChild
            Gtk.Alignment w24 = new Gtk.Alignment(0.5F, 0.5F, 0F, 0F);
            bindings["GtkAlignment"] = w24;
            w24.Name = "GtkAlignment";
            // Container child GtkAlignment.Gtk.Container+ContainerChild
            Gtk.HBox w25 = new Gtk.HBox();
            bindings["GtkHBox"] = w25;
            w25.Name = "GtkHBox";
            w25.Spacing = 2;
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Image w26 = new Gtk.Image();
            bindings["image16"] = w26;
            w26.Name = "image16";
            w26.Pixbuf = Stetic.IconLoader.LoadIcon("gtk-find", 16);
            w25.Add(w26);
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Label w28 = new Gtk.Label();
            bindings["GtkLabel"] = w28;
            w28.Name = "GtkLabel";
            w28.LabelProp = "";
            w25.Add(w28);
            w24.Add(w25);
            w22.Add(w24);
            w17.Add(w22);
            Gtk.Box.BoxChild w32 = ((Gtk.Box.BoxChild)(w17[w22]));
            w32.Position = 2;
            w32.Expand = false;
            w32.Fill = false;
            w16.Add(w17);
            Gtk.Box.BoxChild w33 = ((Gtk.Box.BoxChild)(w16[w17]));
            w33.Position = 0;
            w33.Expand = false;
            w33.Fill = false;
            // Container child vbox2.Gtk.Box+BoxChild
            Gtk.ScrolledWindow w34 = new Gtk.ScrolledWindow();
            bindings["scrolledwindow1"] = w34;
            w34.CanFocus = true;
            w34.Name = "scrolledwindow1";
            w34.VscrollbarPolicy = ((Gtk.PolicyType)(1));
            w34.HscrollbarPolicy = ((Gtk.PolicyType)(1));
            // Container child scrolledwindow1.Gtk.Container+ContainerChild
            Gtk.Viewport w35 = new Gtk.Viewport();
            bindings["GtkViewport"] = w35;
            w35.Name = "GtkViewport";
            w35.ShadowType = ((Gtk.ShadowType)(0));
            // Container child GtkViewport.Gtk.Container+ContainerChild
            Boxerp.Client.GtkSharp.Lib.FilteredListView w36 = null;
            bindings["ftreeviewEnterprises"] = w36;
            w35.Add(w36);
            w34.Add(w35);
            w16.Add(w34);
            Gtk.Box.BoxChild w39 = ((Gtk.Box.BoxChild)(w16[w34]));
            w39.Position = 1;
            // Container child vbox2.Gtk.Box+BoxChild
            Gtk.HBox w40 = new Gtk.HBox();
            bindings["hbox14"] = w40;
            w40.Name = "hbox14";
            // Container child hbox14.Gtk.Box+BoxChild
            Gtk.Button w41 = new Gtk.Button();
            bindings["buttonNewEnterprise"] = w41;
            w23.SetTip(w41, "Añadir un Hecho", "Añadir un Hecho");
            w41.HasDefault = true;
            w41.CanFocus = true;
            w41.Name = "buttonNewEnterprise";
            // Container child buttonNewEnterprise.Gtk.Container+ContainerChild
            Gtk.Alignment w42 = new Gtk.Alignment(0.5F, 0.5F, 0F, 0F);
            bindings["GtkAlignment"] = w42;
            w42.Name = "GtkAlignment";
            // Container child GtkAlignment.Gtk.Container+ContainerChild
            Gtk.HBox w43 = new Gtk.HBox();
            bindings["GtkHBox"] = w43;
            w43.Name = "GtkHBox";
            w43.Spacing = 2;
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Image w44 = new Gtk.Image();
            bindings["image17"] = w44;
            w44.Name = "image17";
            w44.Pixbuf = Stetic.IconLoader.LoadIcon("gtk-new", 16);
            w43.Add(w44);
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Label w46 = new Gtk.Label();
            bindings["GtkLabel"] = w46;
            w46.Name = "GtkLabel";
            w46.LabelProp = "";
            w43.Add(w46);
            w42.Add(w43);
            w41.Add(w42);
            w40.Add(w41);
            Gtk.Box.BoxChild w50 = ((Gtk.Box.BoxChild)(w40[w41]));
            w50.PackType = ((Gtk.PackType)(1));
            w50.Position = 0;
            w50.Expand = false;
            w50.Fill = false;
            // Container child hbox14.Gtk.Box+BoxChild
            Gtk.Button w51 = new Gtk.Button();
            bindings["buttonEditEnterprise"] = w51;
            w23.SetTip(w51, "Editar el Hecho", "Editar el Hecho");
            w51.CanFocus = true;
            w51.Name = "buttonEditEnterprise";
            // Container child buttonEditEnterprise.Gtk.Container+ContainerChild
            Gtk.Alignment w52 = new Gtk.Alignment(0.5F, 0.5F, 0F, 0F);
            bindings["GtkAlignment"] = w52;
            w52.Name = "GtkAlignment";
            // Container child GtkAlignment.Gtk.Container+ContainerChild
            Gtk.HBox w53 = new Gtk.HBox();
            bindings["GtkHBox"] = w53;
            w53.Name = "GtkHBox";
            w53.Spacing = 2;
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Image w54 = new Gtk.Image();
            bindings["image18"] = w54;
            w54.Name = "image18";
            w54.Pixbuf = Stetic.IconLoader.LoadIcon("gtk-edit", 16);
            w53.Add(w54);
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Label w56 = new Gtk.Label();
            bindings["GtkLabel"] = w56;
            w56.Name = "GtkLabel";
            w56.LabelProp = "";
            w53.Add(w56);
            w52.Add(w53);
            w51.Add(w52);
            w40.Add(w51);
            Gtk.Box.BoxChild w60 = ((Gtk.Box.BoxChild)(w40[w51]));
            w60.PackType = ((Gtk.PackType)(1));
            w60.Position = 1;
            w60.Expand = false;
            w60.Fill = false;
            // Container child hbox14.Gtk.Box+BoxChild
            Gtk.Button w61 = new Gtk.Button();
            bindings["buttonDelEnterprise"] = w61;
            w23.SetTip(w61, "Quitar el Hecho", "Quitar el Hecho");
            w61.CanFocus = true;
            w61.Name = "buttonDelEnterprise";
            // Container child buttonDelEnterprise.Gtk.Container+ContainerChild
            Gtk.Alignment w62 = new Gtk.Alignment(0.5F, 0.5F, 0F, 0F);
            bindings["GtkAlignment"] = w62;
            w62.Name = "GtkAlignment";
            // Container child GtkAlignment.Gtk.Container+ContainerChild
            Gtk.HBox w63 = new Gtk.HBox();
            bindings["GtkHBox"] = w63;
            w63.Name = "GtkHBox";
            w63.Spacing = 2;
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Image w64 = new Gtk.Image();
            bindings["image19"] = w64;
            w64.Name = "image19";
            w64.Pixbuf = Stetic.IconLoader.LoadIcon("gtk-delete", 16);
            w63.Add(w64);
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Label w66 = new Gtk.Label();
            bindings["GtkLabel"] = w66;
            w66.Name = "GtkLabel";
            w66.LabelProp = "";
            w63.Add(w66);
            w62.Add(w63);
            w61.Add(w62);
            w40.Add(w61);
            Gtk.Box.BoxChild w70 = ((Gtk.Box.BoxChild)(w40[w61]));
            w70.PackType = ((Gtk.PackType)(1));
            w70.Position = 2;
            w70.Expand = false;
            w70.Fill = false;
            w16.Add(w40);
            Gtk.Box.BoxChild w71 = ((Gtk.Box.BoxChild)(w16[w40]));
            w71.Position = 2;
            w71.Expand = false;
            w71.Fill = false;
            w11.Add(w16);
            Gtk.Box.BoxChild w72 = ((Gtk.Box.BoxChild)(w11[w16]));
            w72.Position = 2;
            w72.Expand = false;
            w72.Fill = false;
            // Container child vbox1.Gtk.Box+BoxChild
            Gtk.HSeparator w73 = new Gtk.HSeparator();
            bindings["hseparator2"] = w73;
            w73.Name = "hseparator2";
            w11.Add(w73);
            Gtk.Box.BoxChild w74 = ((Gtk.Box.BoxChild)(w11[w73]));
            w74.Position = 3;
            w74.Expand = false;
            w74.Fill = false;
            // Container child vbox1.Gtk.Box+BoxChild
            Gtk.HBox w75 = new Gtk.HBox();
            bindings["hbox2"] = w75;
            w75.Name = "hbox2";
            w75.Homogeneous = true;
            // Container child hbox2.Gtk.Box+BoxChild
            Gtk.VBox w76 = new Gtk.VBox();
            bindings["vbox3"] = w76;
            w76.Name = "vbox3";
            w76.BorderWidth = ((uint)(5));
            // Container child vbox3.Gtk.Box+BoxChild
            Gtk.HBox w77 = new Gtk.HBox();
            bindings["hbox3"] = w77;
            w77.Name = "hbox3";
            // Container child hbox3.Gtk.Box+BoxChild
            Gtk.Label w78 = new Gtk.Label();
            bindings["labelUser"] = w78;
            w78.Events = ((Gdk.EventMask)(256));
            w78.Name = "labelUser";
            w78.Ypad = 6;
            w78.LabelProp = "<b>User:</b>";
            w78.UseMarkup = true;
            w77.Add(w78);
            Gtk.Box.BoxChild w79 = ((Gtk.Box.BoxChild)(w77[w78]));
            w79.Position = 0;
            w79.Expand = false;
            w79.Fill = false;
            // Container child hbox3.Gtk.Box+BoxChild
            Gtk.Entry w80 = new Gtk.Entry();
            bindings["entryUser"] = w80;
            w80.CanFocus = true;
            w80.Name = "entryUser";
            w80.IsEditable = true;
            w80.InvisibleChar = '●';
            w77.Add(w80);
            Gtk.Box.BoxChild w81 = ((Gtk.Box.BoxChild)(w77[w80]));
            w81.Position = 1;
            w81.Expand = false;
            w81.Fill = false;
            // Container child hbox3.Gtk.Box+BoxChild
            Gtk.Button w82 = new Gtk.Button();
            bindings["buttonFindUser"] = w82;
            w23.SetTip(w82, "Añadir un Hecho", "Añadir un Hecho");
            w82.HasDefault = true;
            w82.CanFocus = true;
            w82.Name = "buttonFindUser";
            // Container child buttonFindUser.Gtk.Container+ContainerChild
            Gtk.Alignment w83 = new Gtk.Alignment(0.5F, 0.5F, 0F, 0F);
            bindings["GtkAlignment"] = w83;
            w83.Name = "GtkAlignment";
            // Container child GtkAlignment.Gtk.Container+ContainerChild
            Gtk.HBox w84 = new Gtk.HBox();
            bindings["GtkHBox"] = w84;
            w84.Name = "GtkHBox";
            w84.Spacing = 2;
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Image w85 = new Gtk.Image();
            bindings["image20"] = w85;
            w85.Name = "image20";
            w85.Pixbuf = Stetic.IconLoader.LoadIcon("gtk-find", 16);
            w84.Add(w85);
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Label w87 = new Gtk.Label();
            bindings["GtkLabel"] = w87;
            w87.Name = "GtkLabel";
            w87.LabelProp = "";
            w84.Add(w87);
            w83.Add(w84);
            w82.Add(w83);
            w77.Add(w82);
            Gtk.Box.BoxChild w91 = ((Gtk.Box.BoxChild)(w77[w82]));
            w91.Position = 2;
            w91.Expand = false;
            w91.Fill = false;
            w76.Add(w77);
            Gtk.Box.BoxChild w92 = ((Gtk.Box.BoxChild)(w76[w77]));
            w92.Position = 0;
            w92.Expand = false;
            w92.Fill = false;
            // Container child vbox3.Gtk.Box+BoxChild
            Gtk.ScrolledWindow w93 = new Gtk.ScrolledWindow();
            bindings["scrolledwindow2"] = w93;
            w93.CanFocus = true;
            w93.Name = "scrolledwindow2";
            w93.VscrollbarPolicy = ((Gtk.PolicyType)(1));
            w93.HscrollbarPolicy = ((Gtk.PolicyType)(1));
            // Container child scrolledwindow2.Gtk.Container+ContainerChild
            Gtk.Viewport w94 = new Gtk.Viewport();
            bindings["GtkViewport1"] = w94;
            w94.Name = "GtkViewport1";
            w94.ShadowType = ((Gtk.ShadowType)(0));
            // Container child GtkViewport1.Gtk.Container+ContainerChild
            Boxerp.Client.GtkSharp.Lib.FilteredListView w95 = null;
            bindings["ftreeviewUsers"] = w95;
            w94.Add(w95);
            w93.Add(w94);
            w76.Add(w93);
            Gtk.Box.BoxChild w98 = ((Gtk.Box.BoxChild)(w76[w93]));
            w98.Position = 1;
            // Container child vbox3.Gtk.Box+BoxChild
            Gtk.HBox w99 = new Gtk.HBox();
            bindings["hbox15"] = w99;
            w99.Name = "hbox15";
            // Container child hbox15.Gtk.Box+BoxChild
            Gtk.Button w100 = new Gtk.Button();
            bindings["buttonNewUser"] = w100;
            w23.SetTip(w100, "Añadir un Hecho", "Añadir un Hecho");
            w100.HasDefault = true;
            w100.CanFocus = true;
            w100.Name = "buttonNewUser";
            // Container child buttonNewUser.Gtk.Container+ContainerChild
            Gtk.Alignment w101 = new Gtk.Alignment(0.5F, 0.5F, 0F, 0F);
            bindings["GtkAlignment"] = w101;
            w101.Name = "GtkAlignment";
            // Container child GtkAlignment.Gtk.Container+ContainerChild
            Gtk.HBox w102 = new Gtk.HBox();
            bindings["GtkHBox"] = w102;
            w102.Name = "GtkHBox";
            w102.Spacing = 2;
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Image w103 = new Gtk.Image();
            bindings["image21"] = w103;
            w103.Name = "image21";
            w103.Pixbuf = Stetic.IconLoader.LoadIcon("gtk-new", 16);
            w102.Add(w103);
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Label w105 = new Gtk.Label();
            bindings["GtkLabel"] = w105;
            w105.Name = "GtkLabel";
            w105.LabelProp = "";
            w102.Add(w105);
            w101.Add(w102);
            w100.Add(w101);
            w99.Add(w100);
            Gtk.Box.BoxChild w109 = ((Gtk.Box.BoxChild)(w99[w100]));
            w109.PackType = ((Gtk.PackType)(1));
            w109.Position = 0;
            w109.Expand = false;
            w109.Fill = false;
            // Container child hbox15.Gtk.Box+BoxChild
            Gtk.Button w110 = new Gtk.Button();
            bindings["buttonEditUser"] = w110;
            w23.SetTip(w110, "Editar el Hecho", "Editar el Hecho");
            w110.CanFocus = true;
            w110.Name = "buttonEditUser";
            // Container child buttonEditUser.Gtk.Container+ContainerChild
            Gtk.Alignment w111 = new Gtk.Alignment(0.5F, 0.5F, 0F, 0F);
            bindings["GtkAlignment"] = w111;
            w111.Name = "GtkAlignment";
            // Container child GtkAlignment.Gtk.Container+ContainerChild
            Gtk.HBox w112 = new Gtk.HBox();
            bindings["GtkHBox"] = w112;
            w112.Name = "GtkHBox";
            w112.Spacing = 2;
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Image w113 = new Gtk.Image();
            bindings["image22"] = w113;
            w113.Name = "image22";
            w113.Pixbuf = Stetic.IconLoader.LoadIcon("gtk-edit", 16);
            w112.Add(w113);
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Label w115 = new Gtk.Label();
            bindings["GtkLabel"] = w115;
            w115.Name = "GtkLabel";
            w115.LabelProp = "";
            w112.Add(w115);
            w111.Add(w112);
            w110.Add(w111);
            w99.Add(w110);
            Gtk.Box.BoxChild w119 = ((Gtk.Box.BoxChild)(w99[w110]));
            w119.PackType = ((Gtk.PackType)(1));
            w119.Position = 1;
            w119.Expand = false;
            w119.Fill = false;
            // Container child hbox15.Gtk.Box+BoxChild
            Gtk.Button w120 = new Gtk.Button();
            bindings["buttonDelUser"] = w120;
            w23.SetTip(w120, "Quitar el Hecho", "Quitar el Hecho");
            w120.CanFocus = true;
            w120.Name = "buttonDelUser";
            // Container child buttonDelUser.Gtk.Container+ContainerChild
            Gtk.Alignment w121 = new Gtk.Alignment(0.5F, 0.5F, 0F, 0F);
            bindings["GtkAlignment"] = w121;
            w121.Name = "GtkAlignment";
            // Container child GtkAlignment.Gtk.Container+ContainerChild
            Gtk.HBox w122 = new Gtk.HBox();
            bindings["GtkHBox"] = w122;
            w122.Name = "GtkHBox";
            w122.Spacing = 2;
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Image w123 = new Gtk.Image();
            bindings["image23"] = w123;
            w123.Name = "image23";
            w123.Pixbuf = Stetic.IconLoader.LoadIcon("gtk-delete", 16);
            w122.Add(w123);
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Label w125 = new Gtk.Label();
            bindings["GtkLabel"] = w125;
            w125.Name = "GtkLabel";
            w125.LabelProp = "";
            w122.Add(w125);
            w121.Add(w122);
            w120.Add(w121);
            w99.Add(w120);
            Gtk.Box.BoxChild w129 = ((Gtk.Box.BoxChild)(w99[w120]));
            w129.PackType = ((Gtk.PackType)(1));
            w129.Position = 2;
            w129.Expand = false;
            w129.Fill = false;
            w76.Add(w99);
            Gtk.Box.BoxChild w130 = ((Gtk.Box.BoxChild)(w76[w99]));
            w130.Position = 2;
            w130.Expand = false;
            w130.Fill = false;
            w75.Add(w76);
            Gtk.Box.BoxChild w131 = ((Gtk.Box.BoxChild)(w75[w76]));
            w131.Position = 0;
            // Container child hbox2.Gtk.Box+BoxChild
            Gtk.VBox w132 = new Gtk.VBox();
            bindings["vbox4"] = w132;
            w132.Name = "vbox4";
            w132.BorderWidth = ((uint)(5));
            // Container child vbox4.Gtk.Box+BoxChild
            Gtk.HBox w133 = new Gtk.HBox();
            bindings["hbox4"] = w133;
            w133.Name = "hbox4";
            // Container child hbox4.Gtk.Box+BoxChild
            Gtk.Label w134 = new Gtk.Label();
            bindings["labelGroup"] = w134;
            w134.Events = ((Gdk.EventMask)(256));
            w134.Name = "labelGroup";
            w134.Ypad = 6;
            w134.LabelProp = "<b>Group:</b>";
            w134.UseMarkup = true;
            w133.Add(w134);
            Gtk.Box.BoxChild w135 = ((Gtk.Box.BoxChild)(w133[w134]));
            w135.Position = 0;
            w135.Expand = false;
            w135.Fill = false;
            // Container child hbox4.Gtk.Box+BoxChild
            Gtk.Entry w136 = new Gtk.Entry();
            bindings["entryGroup"] = w136;
            w136.CanFocus = true;
            w136.Name = "entryGroup";
            w136.IsEditable = true;
            w136.InvisibleChar = '●';
            w133.Add(w136);
            Gtk.Box.BoxChild w137 = ((Gtk.Box.BoxChild)(w133[w136]));
            w137.Position = 1;
            w137.Expand = false;
            w137.Fill = false;
            // Container child hbox4.Gtk.Box+BoxChild
            Gtk.Button w138 = new Gtk.Button();
            bindings["buttonFindGroup"] = w138;
            w23.SetTip(w138, "Añadir un Hecho", "Añadir un Hecho");
            w138.HasDefault = true;
            w138.CanFocus = true;
            w138.Name = "buttonFindGroup";
            // Container child buttonFindGroup.Gtk.Container+ContainerChild
            Gtk.Alignment w139 = new Gtk.Alignment(0.5F, 0.5F, 0F, 0F);
            bindings["GtkAlignment"] = w139;
            w139.Name = "GtkAlignment";
            // Container child GtkAlignment.Gtk.Container+ContainerChild
            Gtk.HBox w140 = new Gtk.HBox();
            bindings["GtkHBox"] = w140;
            w140.Name = "GtkHBox";
            w140.Spacing = 2;
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Image w141 = new Gtk.Image();
            bindings["image24"] = w141;
            w141.Name = "image24";
            w141.Pixbuf = Stetic.IconLoader.LoadIcon("gtk-find", 16);
            w140.Add(w141);
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Label w143 = new Gtk.Label();
            bindings["GtkLabel"] = w143;
            w143.Name = "GtkLabel";
            w143.LabelProp = "";
            w140.Add(w143);
            w139.Add(w140);
            w138.Add(w139);
            w133.Add(w138);
            Gtk.Box.BoxChild w147 = ((Gtk.Box.BoxChild)(w133[w138]));
            w147.Position = 2;
            w147.Expand = false;
            w147.Fill = false;
            w132.Add(w133);
            Gtk.Box.BoxChild w148 = ((Gtk.Box.BoxChild)(w132[w133]));
            w148.Position = 0;
            w148.Expand = false;
            w148.Fill = false;
            // Container child vbox4.Gtk.Box+BoxChild
            Gtk.ScrolledWindow w149 = new Gtk.ScrolledWindow();
            bindings["scrolledwindow3"] = w149;
            w149.CanFocus = true;
            w149.Name = "scrolledwindow3";
            w149.VscrollbarPolicy = ((Gtk.PolicyType)(1));
            w149.HscrollbarPolicy = ((Gtk.PolicyType)(1));
            // Container child scrolledwindow3.Gtk.Container+ContainerChild
            Gtk.Viewport w150 = new Gtk.Viewport();
            bindings["GtkViewport2"] = w150;
            w150.Name = "GtkViewport2";
            w150.ShadowType = ((Gtk.ShadowType)(0));
            // Container child GtkViewport2.Gtk.Container+ContainerChild
            Boxerp.Client.GtkSharp.Lib.FilteredListView w151 = null;
            bindings["ftreeviewGroups"] = w151;
            w150.Add(w151);
            w149.Add(w150);
            w132.Add(w149);
            Gtk.Box.BoxChild w154 = ((Gtk.Box.BoxChild)(w132[w149]));
            w154.Position = 1;
            // Container child vbox4.Gtk.Box+BoxChild
            Gtk.HBox w155 = new Gtk.HBox();
            bindings["hbox16"] = w155;
            w155.Name = "hbox16";
            // Container child hbox16.Gtk.Box+BoxChild
            Gtk.Button w156 = new Gtk.Button();
            bindings["buttonNewGroup"] = w156;
            w23.SetTip(w156, "Añadir un Hecho", "Añadir un Hecho");
            w156.HasDefault = true;
            w156.CanFocus = true;
            w156.Name = "buttonNewGroup";
            // Container child buttonNewGroup.Gtk.Container+ContainerChild
            Gtk.Alignment w157 = new Gtk.Alignment(0.5F, 0.5F, 0F, 0F);
            bindings["GtkAlignment"] = w157;
            w157.Name = "GtkAlignment";
            // Container child GtkAlignment.Gtk.Container+ContainerChild
            Gtk.HBox w158 = new Gtk.HBox();
            bindings["GtkHBox"] = w158;
            w158.Name = "GtkHBox";
            w158.Spacing = 2;
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Image w159 = new Gtk.Image();
            bindings["image25"] = w159;
            w159.Name = "image25";
            w159.Pixbuf = Stetic.IconLoader.LoadIcon("gtk-new", 16);
            w158.Add(w159);
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Label w161 = new Gtk.Label();
            bindings["GtkLabel"] = w161;
            w161.Name = "GtkLabel";
            w161.LabelProp = "";
            w158.Add(w161);
            w157.Add(w158);
            w156.Add(w157);
            w155.Add(w156);
            Gtk.Box.BoxChild w165 = ((Gtk.Box.BoxChild)(w155[w156]));
            w165.PackType = ((Gtk.PackType)(1));
            w165.Position = 0;
            w165.Expand = false;
            w165.Fill = false;
            // Container child hbox16.Gtk.Box+BoxChild
            Gtk.Button w166 = new Gtk.Button();
            bindings["buttonEditGroup"] = w166;
            w23.SetTip(w166, "Editar el Hecho", "Editar el Hecho");
            w166.CanFocus = true;
            w166.Name = "buttonEditGroup";
            // Container child buttonEditGroup.Gtk.Container+ContainerChild
            Gtk.Alignment w167 = new Gtk.Alignment(0.5F, 0.5F, 0F, 0F);
            bindings["GtkAlignment"] = w167;
            w167.Name = "GtkAlignment";
            // Container child GtkAlignment.Gtk.Container+ContainerChild
            Gtk.HBox w168 = new Gtk.HBox();
            bindings["GtkHBox"] = w168;
            w168.Name = "GtkHBox";
            w168.Spacing = 2;
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Image w169 = new Gtk.Image();
            bindings["image26"] = w169;
            w169.Name = "image26";
            w169.Pixbuf = Stetic.IconLoader.LoadIcon("gtk-edit", 16);
            w168.Add(w169);
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Label w171 = new Gtk.Label();
            bindings["GtkLabel"] = w171;
            w171.Name = "GtkLabel";
            w171.LabelProp = "";
            w168.Add(w171);
            w167.Add(w168);
            w166.Add(w167);
            w155.Add(w166);
            Gtk.Box.BoxChild w175 = ((Gtk.Box.BoxChild)(w155[w166]));
            w175.PackType = ((Gtk.PackType)(1));
            w175.Position = 1;
            w175.Expand = false;
            w175.Fill = false;
            // Container child hbox16.Gtk.Box+BoxChild
            Gtk.Button w176 = new Gtk.Button();
            bindings["buttonDelGroup"] = w176;
            w23.SetTip(w176, "Quitar el Hecho", "Quitar el Hecho");
            w176.CanFocus = true;
            w176.Name = "buttonDelGroup";
            // Container child buttonDelGroup.Gtk.Container+ContainerChild
            Gtk.Alignment w177 = new Gtk.Alignment(0.5F, 0.5F, 0F, 0F);
            bindings["GtkAlignment"] = w177;
            w177.Name = "GtkAlignment";
            // Container child GtkAlignment.Gtk.Container+ContainerChild
            Gtk.HBox w178 = new Gtk.HBox();
            bindings["GtkHBox"] = w178;
            w178.Name = "GtkHBox";
            w178.Spacing = 2;
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Image w179 = new Gtk.Image();
            bindings["image27"] = w179;
            w179.Name = "image27";
            w179.Pixbuf = Stetic.IconLoader.LoadIcon("gtk-delete", 16);
            w178.Add(w179);
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Label w181 = new Gtk.Label();
            bindings["GtkLabel"] = w181;
            w181.Name = "GtkLabel";
            w181.LabelProp = "";
            w178.Add(w181);
            w177.Add(w178);
            w176.Add(w177);
            w155.Add(w176);
            Gtk.Box.BoxChild w185 = ((Gtk.Box.BoxChild)(w155[w176]));
            w185.PackType = ((Gtk.PackType)(1));
            w185.Position = 2;
            w185.Expand = false;
            w185.Fill = false;
            w132.Add(w155);
            Gtk.Box.BoxChild w186 = ((Gtk.Box.BoxChild)(w132[w155]));
            w186.Position = 2;
            w186.Expand = false;
            w186.Fill = false;
            w75.Add(w132);
            Gtk.Box.BoxChild w187 = ((Gtk.Box.BoxChild)(w75[w132]));
            w187.Position = 1;
            w11.Add(w75);
            Gtk.Box.BoxChild w188 = ((Gtk.Box.BoxChild)(w11[w75]));
            w188.Position = 4;
            // Container child vbox1.Gtk.Box+BoxChild
            Gtk.HSeparator w189 = new Gtk.HSeparator();
            bindings["hseparator1"] = w189;
            w189.Name = "hseparator1";
            w11.Add(w189);
            Gtk.Box.BoxChild w190 = ((Gtk.Box.BoxChild)(w11[w189]));
            w190.Position = 6;
            w190.Expand = false;
            w190.Fill = false;
            // Container child vbox1.Gtk.Box+BoxChild
            Gtk.Statusbar w191 = new Gtk.Statusbar();
            bindings["statusbar1"] = w191;
            w191.Name = "statusbar1";
            w191.Spacing = 2;
            w11.Add(w191);
            Gtk.Box.BoxChild w192 = ((Gtk.Box.BoxChild)(w11[w191]));
            w192.Position = 7;
            w192.Expand = false;
            w192.Fill = false;
            cobj.Add(w11);
            if ((cobj.Child != null)) {
                cobj.Child.ShowAll();
            }
            cobj.Show();
            cobj.DeleteEvent += ((Gtk.DeleteEventHandler)(System.Delegate.CreateDelegate(typeof(Gtk.DeleteEventHandler), cobj, "OnDeleteEvent")));
            w20.Activated += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnFindEnterprise")));
            w22.Clicked += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnFindEnterprise")));
            w61.Clicked += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnDelEnterpriseClicked")));
            w51.Clicked += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnEditEnterpriseClicked")));
            w41.Clicked += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnNewEnterpriseClicked")));
            w80.Activated += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnFindUser")));
            w82.Clicked += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnFindUser")));
            w120.Clicked += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnDelUserClicked")));
            w110.Clicked += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnEditUserClicked")));
            w100.Clicked += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnNewUserClicked")));
            w136.Activated += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnFindGroup")));
            w138.Clicked += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnFindGroup")));
            w176.Clicked += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnDelGroupClicked")));
            w166.Clicked += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnEditGroupClicked")));
            w156.Clicked += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnNewGroupClicked")));
            System.Reflection.FieldInfo[] fields = cobj.GetType().GetFields(((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic) | System.Reflection.BindingFlags.Instance));
            for (int n = 0; (n < fields.Length); n = (n + 1)) {
                System.Reflection.FieldInfo field = fields[n];
                object widget = bindings[field.Name];
                if (((widget != null) && field.FieldType.IsInstanceOfType(widget))) {
                    field.SetValue(cobj, widget);
                }
            }
        }
    }
}
