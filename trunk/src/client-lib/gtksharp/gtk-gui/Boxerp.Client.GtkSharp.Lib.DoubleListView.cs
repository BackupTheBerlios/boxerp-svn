// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.42
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Stetic.SteticGenerated {
    
    
    internal class BoxerpClientGtkSharpLibDoubleListView {
        
        public static void Build(Gtk.Bin cobj) {
            System.Collections.Hashtable bindings = new System.Collections.Hashtable();
            // Widget Boxerp.Client.GtkSharp.Lib.DoubleListView
            Stetic.BinContainer.Attach(cobj);
            cobj.Events = ((Gdk.EventMask)(256));
            cobj.Name = "Boxerp.Client.GtkSharp.Lib.DoubleListView";
            // Container child Boxerp.Client.GtkSharp.Lib.DoubleListView.Gtk.Container+ContainerChild
            Gtk.VBox w1 = new Gtk.VBox();
            bindings["vbox2"] = w1;
            w1.Name = "vbox2";
            // Container child vbox2.Gtk.Box+BoxChild
            Gtk.HBox w2 = new Gtk.HBox();
            bindings["hbox2"] = w2;
            w2.Name = "hbox2";
            // Container child hbox2.Gtk.Box+BoxChild
            Gtk.Label w3 = new Gtk.Label();
            bindings["labelLeft"] = w3;
            w3.Name = "labelLeft";
            w3.LabelProp = "label1";
            w2.Add(w3);
            Gtk.Box.BoxChild w4 = ((Gtk.Box.BoxChild)(w2[w3]));
            w4.Position = 0;
            w4.Fill = false;
            // Container child hbox2.Gtk.Box+BoxChild
            Gtk.VSeparator w5 = new Gtk.VSeparator();
            bindings["vseparator1"] = w5;
            w5.Name = "vseparator1";
            w2.Add(w5);
            Gtk.Box.BoxChild w6 = ((Gtk.Box.BoxChild)(w2[w5]));
            w6.Position = 1;
            w6.Expand = false;
            w6.Fill = false;
            // Container child hbox2.Gtk.Box+BoxChild
            Gtk.Label w7 = new Gtk.Label();
            bindings["labelRight"] = w7;
            w7.Name = "labelRight";
            w7.LabelProp = "label2";
            w2.Add(w7);
            Gtk.Box.BoxChild w8 = ((Gtk.Box.BoxChild)(w2[w7]));
            w8.Position = 2;
            w8.Fill = false;
            w1.Add(w2);
            Gtk.Box.BoxChild w9 = ((Gtk.Box.BoxChild)(w1[w2]));
            w9.Position = 0;
            w9.Expand = false;
            // Container child vbox2.Gtk.Box+BoxChild
            Gtk.HBox w10 = new Gtk.HBox();
            bindings["hbox1"] = w10;
            w10.Name = "hbox1";
            w10.Spacing = 5;
            w10.BorderWidth = ((uint)(5));
            // Container child hbox1.Gtk.Box+BoxChild
            Gtk.ScrolledWindow w11 = new Gtk.ScrolledWindow();
            bindings["scrolledwindow1"] = w11;
            w11.CanFocus = true;
            w11.Name = "scrolledwindow1";
            w11.VscrollbarPolicy = ((Gtk.PolicyType)(1));
            w11.HscrollbarPolicy = ((Gtk.PolicyType)(1));
            // Container child scrolledwindow1.Gtk.Container+ContainerChild
            Gtk.Viewport w12 = new Gtk.Viewport();
            bindings["GtkViewport"] = w12;
            w12.Name = "GtkViewport";
            w12.ShadowType = ((Gtk.ShadowType)(0));
            // Container child GtkViewport.Gtk.Container+ContainerChild
            Boxerp.Client.GtkSharp.Lib.SimpleListView w13 = new Boxerp.Client.GtkSharp.Lib.SimpleListView();
            bindings["slistviewLeft"] = w13;
            w13.Events = ((Gdk.EventMask)(256));
            w13.Name = "slistviewLeft";
            w12.Add(w13);
            w11.Add(w12);
            w10.Add(w11);
            Gtk.Box.BoxChild w16 = ((Gtk.Box.BoxChild)(w10[w11]));
            w16.Position = 0;
            // Container child hbox1.Gtk.Box+BoxChild
            Gtk.VBox w17 = new Gtk.VBox();
            bindings["vbox1"] = w17;
            w17.Name = "vbox1";
            w17.Homogeneous = true;
            // Container child vbox1.Gtk.Box+BoxChild
            Gtk.Button w18 = new Gtk.Button();
            bindings["button5"] = w18;
            w18.CanFocus = true;
            w18.Name = "button5";
            // Container child button5.Gtk.Container+ContainerChild
            Gtk.Alignment w19 = new Gtk.Alignment(0.5F, 0.5F, 0F, 0F);
            bindings["GtkAlignment"] = w19;
            w19.Name = "GtkAlignment";
            // Container child GtkAlignment.Gtk.Container+ContainerChild
            Gtk.HBox w20 = new Gtk.HBox();
            bindings["GtkHBox"] = w20;
            w20.Name = "GtkHBox";
            w20.Spacing = 2;
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Image w21 = new Gtk.Image();
            bindings["image21"] = w21;
            w21.Name = "image21";
            w21.Pixbuf = Stetic.IconLoader.LoadIcon("stock_left", 16);
            w20.Add(w21);
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Label w23 = new Gtk.Label();
            bindings["GtkLabel"] = w23;
            w23.Name = "GtkLabel";
            w23.LabelProp = "";
            w20.Add(w23);
            w19.Add(w20);
            w18.Add(w19);
            w17.Add(w18);
            Gtk.Box.BoxChild w27 = ((Gtk.Box.BoxChild)(w17[w18]));
            w27.Position = 1;
            w27.Expand = false;
            w27.Fill = false;
            // Container child vbox1.Gtk.Box+BoxChild
            Gtk.Button w28 = new Gtk.Button();
            bindings["button6"] = w28;
            w28.CanFocus = true;
            w28.Name = "button6";
            // Container child button6.Gtk.Container+ContainerChild
            Gtk.Alignment w29 = new Gtk.Alignment(0.5F, 0.5F, 0F, 0F);
            bindings["GtkAlignment"] = w29;
            w29.Name = "GtkAlignment";
            // Container child GtkAlignment.Gtk.Container+ContainerChild
            Gtk.HBox w30 = new Gtk.HBox();
            bindings["GtkHBox"] = w30;
            w30.Name = "GtkHBox";
            w30.Spacing = 2;
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Image w31 = new Gtk.Image();
            bindings["image22"] = w31;
            w31.Name = "image22";
            w31.Pixbuf = Stetic.IconLoader.LoadIcon("stock_right", 16);
            w30.Add(w31);
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Label w33 = new Gtk.Label();
            bindings["GtkLabel"] = w33;
            w33.Name = "GtkLabel";
            w33.LabelProp = "";
            w30.Add(w33);
            w29.Add(w30);
            w28.Add(w29);
            w17.Add(w28);
            Gtk.Box.BoxChild w37 = ((Gtk.Box.BoxChild)(w17[w28]));
            w37.Position = 2;
            w37.Expand = false;
            w37.Fill = false;
            w10.Add(w17);
            Gtk.Box.BoxChild w38 = ((Gtk.Box.BoxChild)(w10[w17]));
            w38.Position = 1;
            w38.Expand = false;
            w38.Fill = false;
            // Container child hbox1.Gtk.Box+BoxChild
            Gtk.ScrolledWindow w39 = new Gtk.ScrolledWindow();
            bindings["scrolledwindow2"] = w39;
            w39.CanFocus = true;
            w39.Name = "scrolledwindow2";
            w39.VscrollbarPolicy = ((Gtk.PolicyType)(1));
            w39.HscrollbarPolicy = ((Gtk.PolicyType)(1));
            // Container child scrolledwindow2.Gtk.Container+ContainerChild
            Gtk.Viewport w40 = new Gtk.Viewport();
            bindings["GtkViewport1"] = w40;
            w40.Name = "GtkViewport1";
            w40.ShadowType = ((Gtk.ShadowType)(0));
            // Container child GtkViewport1.Gtk.Container+ContainerChild
            Boxerp.Client.GtkSharp.Lib.SimpleListView w41 = new Boxerp.Client.GtkSharp.Lib.SimpleListView();
            bindings["slistviewRight"] = w41;
            w41.Events = ((Gdk.EventMask)(256));
            w41.Name = "slistviewRight";
            w40.Add(w41);
            w39.Add(w40);
            w10.Add(w39);
            Gtk.Box.BoxChild w44 = ((Gtk.Box.BoxChild)(w10[w39]));
            w44.PackType = ((Gtk.PackType)(1));
            w44.Position = 2;
            w1.Add(w10);
            Gtk.Box.BoxChild w45 = ((Gtk.Box.BoxChild)(w1[w10]));
            w45.Position = 1;
            cobj.Add(w1);
            if ((cobj.Child != null)) {
                cobj.Child.ShowAll();
            }
            cobj.Show();
            w18.Clicked += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnLeftClicked")));
            w28.Clicked += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnRightClicked")));
            System.Reflection.FieldInfo[] fields = cobj.GetType().GetFields(((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic) | System.Reflection.BindingFlags.Instance));
            for (int n = 0; (n < fields.Length); n = (n + 1)) {
                System.Reflection.FieldInfo field = fields[n];
                object widget = bindings[field.Name];
                if (((widget != null) && field.FieldType.IsInstanceOfType(widget))) {
                    field.SetValue(cobj, widget);
                }
            }
        }
    }
}
