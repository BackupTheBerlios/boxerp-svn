// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.42
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Stetic.SteticGenerated {
    
    
    internal class BoxerpClientGtkSharpLibSimpleListView {
        
        public static void Build(Gtk.Bin cobj) {
            System.Collections.Hashtable bindings = new System.Collections.Hashtable();
            // Widget Boxerp.Client.GtkSharp.Lib.SimpleListView
            Stetic.BinContainer.Attach(cobj);
            cobj.Events = ((Gdk.EventMask)(256));
            cobj.Name = "Boxerp.Client.GtkSharp.Lib.SimpleListView";
            // Container child Boxerp.Client.GtkSharp.Lib.SimpleListView.Gtk.Container+ContainerChild
            Gtk.TreeView w1 = new Gtk.TreeView();
            bindings["treeview"] = w1;
            w1.CanFocus = true;
            w1.Name = "treeview";
            cobj.Add(w1);
            if ((cobj.Child != null)) {
                cobj.Child.ShowAll();
            }
            cobj.Show();
            System.Reflection.FieldInfo[] fields = cobj.GetType().GetFields(((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic) | System.Reflection.BindingFlags.Instance));
            for (int n = 0; (n < fields.Length); n = (n + 1)) {
                System.Reflection.FieldInfo field = fields[n];
                object widget = bindings[field.Name];
                if (((widget != null) && field.FieldType.IsInstanceOfType(widget))) {
                    field.SetValue(cobj, widget);
                }
            }
        }
    }
}
