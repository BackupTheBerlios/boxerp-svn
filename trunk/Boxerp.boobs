#
# Copyright (c) 2007, Boxerp Project (www.boxerp.org)
#
# Copyright (C) 2005,2006 Shidix Technologies (www.shidix.com)
#
# Redistribution and use in source and binary forms, with or
# without modification, are permitted provided that the following
# conditions are met:
# Redistributions of source code must retain the above
# copyright notice, this list of conditions and the following
# disclaimer.
# Redistributions in binary form must reproduce the above
# copyright notice, this list of conditions and the following
# disclaimer in the documentation and/or other materials
# provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
# THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
# PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
# TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
# IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
# THE POSSIBILITY OF SUCH DAMAGE.
#
# Boo build script for boxerp

import Boobs.Engine.Builder
import Boobs.IO.Extensions
import Boobs.Compiler.Extensions
import System.IO

#common directories
buildBaseDir = "C:\\builds\\"
dependencyDir = "src/dependencies/"

#dependencies
castleCore = "${dependencyDir}Castle.Core.dll"
castleDp2 = "${dependencyDir}Castle.DynamicProxy2.dll"

#common
boxerpClient = "Boxerp.Client"
boxerpWinforms = "${boxerpClient}.Winforms"
boxerpGtk = "${boxerpClient}.Gtk"
boxerpWpf = "${boxerpClient}.Wpf"

#assemblies
boxerpClientAss = "${boxerpClient}.dll"
boxerpWinformsAss = "${boxerpWinforms}.dll"
boxerpGtkAss = "${boxerpGtk}.dll"
boxerpWpfAss = "${boxerpWpf}.dll"
		
Task "default", ["clean all", "build ${boxerpClient}", "build ${boxerpWinforms}"]
	
Task "clean all":
	Rm(buildBaseDir,"Boxerp.**.dll")
	
Task "build Boxerp.Client":
	finalPath = Path.Combine(buildBaseDir,boxerpClientAss)
	print "building ${boxerpClient} at ${finalPath}"
	cc = Csc(
		SourcesSet : FileSet("src/client-lib/client-base/**/*.cs"),
		OutputFile : finalPath,
		OutputTarget : TargetType.Library
		)
	cc.ReferencesSet.Include(castleCore)
	cc.ReferencesSet.Include(castleDp2)
	cc.Execute()
	print "done building ${boxerpClient}"
	
Task "build Boxerp.Client.Winforms":
	finalPath = Path.Combine(buildBaseDir,boxerpWinformsAss)
	print "building ${boxerpWinforms} at ${finalPath}"
	cc = Csc(
		SourcesSet : FileSet("src/client-lib/winforms/**/*.cs"),
		OutputFile : finalPath,
		OutputTarget : TargetType.Library
		)
	cc.ReferencesSet.Include(castleCore)
	cc.ReferencesSet.Include(Path.Combine(buildBaseDir,boxerpClientAss))
	cc.Execute()
	print "done building ${boxerpWinforms}"
	
#wpf build needs dependencies added.
Task "build Boxerp.Client.Wpf":
	finalPath = Path.Combine(buildBaseDir,boxerpWpfAss)
	print "building ${boxerpWpf} at ${finalPath}"
	cc = Csc(
		SourcesSet : FileSet("src/client-lib/wpf/**/*.cs"),
		OutputFile: finalPath,
		OutputTarget : TargetType.Library
		)
	cc.ReferencesSet.Include(castleCore)
	cc.ReferencesSet.Include(Path.Combine(buildBaseDir,boxerpClientAss))
	cc.Execute()
	print "done building ${boxerpWpf}"
