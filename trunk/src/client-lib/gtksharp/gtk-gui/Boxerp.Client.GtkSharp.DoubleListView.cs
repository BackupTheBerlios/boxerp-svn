// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.42
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Stetic.SteticGenerated {
    
    
    internal class BoxerpClientGtkSharpDoubleListView {
        
        public static void Build(Gtk.Bin cobj) {
            System.Collections.Hashtable bindings = new System.Collections.Hashtable();
            // Widget Boxerp.Client.GtkSharp.DoubleListView
            Stetic.BinContainer.Attach(cobj);
            cobj.Events = ((Gdk.EventMask)(256));
            cobj.Name = "Boxerp.Client.GtkSharp.DoubleListView";
            // Container child Boxerp.Client.GtkSharp.DoubleListView.Gtk.Container+ContainerChild
            Gtk.VBox w1 = new Gtk.VBox();
            bindings["vbox2"] = w1;
            w1.Name = "vbox2";
            // Container child vbox2.Gtk.Box+BoxChild
            Gtk.HBox w2 = new Gtk.HBox();
            bindings["hbox2"] = w2;
            w2.Name = "hbox2";
            // Container child hbox2.Gtk.Box+BoxChild
            Gtk.Label w3 = new Gtk.Label();
            bindings["labelLeft"] = w3;
            w3.Name = "labelLeft";
            w3.LabelProp = "label1";
            w2.Add(w3);
            Gtk.Box.BoxChild w4 = ((Gtk.Box.BoxChild)(w2[w3]));
            w4.Position = 0;
            w4.Fill = false;
            // Container child hbox2.Gtk.Box+BoxChild
            Gtk.VSeparator w5 = new Gtk.VSeparator();
            bindings["vseparator1"] = w5;
            w5.Name = "vseparator1";
            w2.Add(w5);
            Gtk.Box.BoxChild w6 = ((Gtk.Box.BoxChild)(w2[w5]));
            w6.Position = 1;
            w6.Expand = false;
            w6.Fill = false;
            // Container child hbox2.Gtk.Box+BoxChild
            Gtk.Label w7 = new Gtk.Label();
            bindings["labelRight"] = w7;
            w7.Name = "labelRight";
            w7.LabelProp = "label2";
            w2.Add(w7);
            Gtk.Box.BoxChild w8 = ((Gtk.Box.BoxChild)(w2[w7]));
            w8.Position = 2;
            w8.Fill = false;
            w1.Add(w2);
            Gtk.Box.BoxChild w9 = ((Gtk.Box.BoxChild)(w1[w2]));
            w9.Position = 0;
            w9.Expand = false;
            // Container child vbox2.Gtk.Box+BoxChild
            Gtk.HBox w10 = new Gtk.HBox();
            bindings["hbox1"] = w10;
            w10.Name = "hbox1";
            w10.Spacing = 5;
            w10.BorderWidth = ((uint)(5));
            // Container child hbox1.Gtk.Box+BoxChild
            Gtk.ScrolledWindow w11 = new Gtk.ScrolledWindow();
            bindings["scrolledwindow1"] = w11;
            w11.CanFocus = true;
            w11.Name = "scrolledwindow1";
            w11.VscrollbarPolicy = ((Gtk.PolicyType)(1));
            w11.HscrollbarPolicy = ((Gtk.PolicyType)(1));
            w10.Add(w11);
            Gtk.Box.BoxChild w12 = ((Gtk.Box.BoxChild)(w10[w11]));
            w12.Position = 0;
            // Container child hbox1.Gtk.Box+BoxChild
            Gtk.VBox w13 = new Gtk.VBox();
            bindings["vbox1"] = w13;
            w13.Name = "vbox1";
            w13.Homogeneous = true;
            // Container child vbox1.Gtk.Box+BoxChild
            Gtk.Button w14 = new Gtk.Button();
            bindings["button5"] = w14;
            w14.CanFocus = true;
            w14.Name = "button5";
            // Container child button5.Gtk.Container+ContainerChild
            Gtk.Alignment w15 = new Gtk.Alignment(0.5F, 0.5F, 0F, 0F);
            bindings["GtkAlignment"] = w15;
            w15.Name = "GtkAlignment";
            // Container child GtkAlignment.Gtk.Container+ContainerChild
            Gtk.HBox w16 = new Gtk.HBox();
            bindings["GtkHBox"] = w16;
            w16.Name = "GtkHBox";
            w16.Spacing = 2;
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Image w17 = new Gtk.Image();
            bindings["image219"] = w17;
            w17.Name = "image219";
            w17.Pixbuf = Stetic.IconLoader.LoadIcon("stock_left", 16);
            w16.Add(w17);
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Label w19 = new Gtk.Label();
            bindings["GtkLabel"] = w19;
            w19.Name = "GtkLabel";
            w19.LabelProp = "";
            w16.Add(w19);
            w15.Add(w16);
            w14.Add(w15);
            w13.Add(w14);
            Gtk.Box.BoxChild w23 = ((Gtk.Box.BoxChild)(w13[w14]));
            w23.Position = 1;
            w23.Expand = false;
            w23.Fill = false;
            // Container child vbox1.Gtk.Box+BoxChild
            Gtk.Button w24 = new Gtk.Button();
            bindings["button6"] = w24;
            w24.CanFocus = true;
            w24.Name = "button6";
            // Container child button6.Gtk.Container+ContainerChild
            Gtk.Alignment w25 = new Gtk.Alignment(0.5F, 0.5F, 0F, 0F);
            bindings["GtkAlignment"] = w25;
            w25.Name = "GtkAlignment";
            // Container child GtkAlignment.Gtk.Container+ContainerChild
            Gtk.HBox w26 = new Gtk.HBox();
            bindings["GtkHBox"] = w26;
            w26.Name = "GtkHBox";
            w26.Spacing = 2;
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Image w27 = new Gtk.Image();
            bindings["image220"] = w27;
            w27.Name = "image220";
            w27.Pixbuf = Stetic.IconLoader.LoadIcon("stock_right", 16);
            w26.Add(w27);
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Label w29 = new Gtk.Label();
            bindings["GtkLabel"] = w29;
            w29.Name = "GtkLabel";
            w29.LabelProp = "";
            w26.Add(w29);
            w25.Add(w26);
            w24.Add(w25);
            w13.Add(w24);
            Gtk.Box.BoxChild w33 = ((Gtk.Box.BoxChild)(w13[w24]));
            w33.Position = 2;
            w33.Expand = false;
            w33.Fill = false;
            w10.Add(w13);
            Gtk.Box.BoxChild w34 = ((Gtk.Box.BoxChild)(w10[w13]));
            w34.Position = 1;
            w34.Expand = false;
            w34.Fill = false;
            // Container child hbox1.Gtk.Box+BoxChild
            Gtk.ScrolledWindow w35 = new Gtk.ScrolledWindow();
            bindings["scrolledwindow2"] = w35;
            w35.CanFocus = true;
            w35.Name = "scrolledwindow2";
            w35.VscrollbarPolicy = ((Gtk.PolicyType)(1));
            w35.HscrollbarPolicy = ((Gtk.PolicyType)(1));
            w10.Add(w35);
            Gtk.Box.BoxChild w36 = ((Gtk.Box.BoxChild)(w10[w35]));
            w36.PackType = ((Gtk.PackType)(1));
            w36.Position = 2;
            w1.Add(w10);
            Gtk.Box.BoxChild w37 = ((Gtk.Box.BoxChild)(w1[w10]));
            w37.Position = 1;
            cobj.Add(w1);
            if ((cobj.Child != null)) {
                cobj.Child.ShowAll();
            }
            cobj.Show();
            w14.Clicked += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnLeftClicked")));
            w24.Clicked += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnRightClicked")));
            System.Reflection.FieldInfo[] fields = cobj.GetType().GetFields(((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic) | System.Reflection.BindingFlags.Instance));
            for (int n = 0; (n < fields.Length); n = (n + 1)) {
                System.Reflection.FieldInfo field = fields[n];
                object widget = bindings[field.Name];
                if (((widget != null) && field.FieldType.IsInstanceOfType(widget))) {
                    field.SetValue(cobj, widget);
                }
            }
        }
    }
}
