// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.42
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Stetic.SteticGenerated {
    
    
    internal class administratorEditUserWindow {
        
        public static void Build(Gtk.Window cobj) {
            System.Collections.Hashtable bindings = new System.Collections.Hashtable();
            // Widget administrator.EditUserWindow
            cobj.Name = "administrator.EditUserWindow";
            cobj.Title = Mono.Unix.Catalog.GetString("User");
            cobj.WindowPosition = ((Gtk.WindowPosition)(4));
            // Container child administrator.EditUserWindow.Gtk.Container+ContainerChild
            Gtk.VBox w1 = new Gtk.VBox();
            bindings["vbox1"] = w1;
            w1.Name = "vbox1";
            // Container child vbox1.Gtk.Box+BoxChild
            Gtk.Notebook w2 = new Gtk.Notebook();
            bindings["notebook1"] = w2;
            w2.CanFocus = true;
            w2.Name = "notebook1";
            w2.CurrentPage = 0;
            // Container child notebook1.Gtk.Notebook+NotebookChild
            Gtk.VBox w3 = new Gtk.VBox();
            bindings["vbox2"] = w3;
            w3.Name = "vbox2";
            // Container child vbox2.Gtk.Box+BoxChild
            Gtk.Table w4 = new Gtk.Table(((uint)(5)), ((uint)(2)), false);
            bindings["table1"] = w4;
            w4.Name = "table1";
            w4.RowSpacing = ((uint)(1));
            w4.ColumnSpacing = ((uint)(5));
            w4.BorderWidth = ((uint)(5));
            // Container child table1.Gtk.Table+TableChild
            Gtk.CheckButton w5 = new Gtk.CheckButton();
            bindings["checkActive"] = w5;
            w5.CanFocus = true;
            w5.Name = "checkActive";
            w5.Label = "";
            w5.DrawIndicator = true;
            w4.Add(w5);
            Gtk.Table.TableChild w6 = ((Gtk.Table.TableChild)(w4[w5]));
            w6.TopAttach = ((uint)(4));
            w6.BottomAttach = ((uint)(5));
            w6.LeftAttach = ((uint)(1));
            w6.RightAttach = ((uint)(2));
            w6.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            Gtk.Entry w7 = new Gtk.Entry();
            bindings["entryEmail"] = w7;
            w7.CanFocus = true;
            w7.Name = "entryEmail";
            w7.IsEditable = true;
            w7.InvisibleChar = '●';
            w4.Add(w7);
            Gtk.Table.TableChild w8 = ((Gtk.Table.TableChild)(w4[w7]));
            w8.TopAttach = ((uint)(2));
            w8.BottomAttach = ((uint)(3));
            w8.LeftAttach = ((uint)(1));
            w8.RightAttach = ((uint)(2));
            w8.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            Gtk.Entry w9 = new Gtk.Entry();
            bindings["entryPassword"] = w9;
            w9.CanFocus = true;
            w9.Name = "entryPassword";
            w9.IsEditable = true;
            w9.Visibility = false;
            w9.InvisibleChar = '●';
            w4.Add(w9);
            Gtk.Table.TableChild w10 = ((Gtk.Table.TableChild)(w4[w9]));
            w10.TopAttach = ((uint)(3));
            w10.BottomAttach = ((uint)(4));
            w10.LeftAttach = ((uint)(1));
            w10.RightAttach = ((uint)(2));
            w10.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            Gtk.Entry w11 = new Gtk.Entry();
            bindings["entryRealName"] = w11;
            w11.CanFocus = true;
            w11.Name = "entryRealName";
            w11.IsEditable = true;
            w11.InvisibleChar = '●';
            w4.Add(w11);
            Gtk.Table.TableChild w12 = ((Gtk.Table.TableChild)(w4[w11]));
            w12.TopAttach = ((uint)(1));
            w12.BottomAttach = ((uint)(2));
            w12.LeftAttach = ((uint)(1));
            w12.RightAttach = ((uint)(2));
            w12.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            Gtk.Entry w13 = new Gtk.Entry();
            bindings["entryUserName"] = w13;
            w13.CanFocus = true;
            w13.Name = "entryUserName";
            w13.IsEditable = true;
            w13.InvisibleChar = '●';
            w4.Add(w13);
            Gtk.Table.TableChild w14 = ((Gtk.Table.TableChild)(w4[w13]));
            w14.LeftAttach = ((uint)(1));
            w14.RightAttach = ((uint)(2));
            w14.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            Gtk.Label w15 = new Gtk.Label();
            bindings["label10"] = w15;
            w15.Name = "label10";
            w15.LabelProp = "User Name:";
            w4.Add(w15);
            Gtk.Table.TableChild w16 = ((Gtk.Table.TableChild)(w4[w15]));
            w16.XOptions = ((Gtk.AttachOptions)(4));
            w16.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            Gtk.Label w17 = new Gtk.Label();
            bindings["label12"] = w17;
            w17.Name = "label12";
            w17.LabelProp = "Real Name:";
            w4.Add(w17);
            Gtk.Table.TableChild w18 = ((Gtk.Table.TableChild)(w4[w17]));
            w18.TopAttach = ((uint)(1));
            w18.BottomAttach = ((uint)(2));
            w18.XOptions = ((Gtk.AttachOptions)(4));
            w18.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            Gtk.Label w19 = new Gtk.Label();
            bindings["label13"] = w19;
            w19.Name = "label13";
            w19.LabelProp = "Email:";
            w4.Add(w19);
            Gtk.Table.TableChild w20 = ((Gtk.Table.TableChild)(w4[w19]));
            w20.TopAttach = ((uint)(2));
            w20.BottomAttach = ((uint)(3));
            w20.XOptions = ((Gtk.AttachOptions)(4));
            w20.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            Gtk.Label w21 = new Gtk.Label();
            bindings["label14"] = w21;
            w21.Name = "label14";
            w21.LabelProp = "Password:";
            w4.Add(w21);
            Gtk.Table.TableChild w22 = ((Gtk.Table.TableChild)(w4[w21]));
            w22.TopAttach = ((uint)(3));
            w22.BottomAttach = ((uint)(4));
            w22.XOptions = ((Gtk.AttachOptions)(4));
            w22.YOptions = ((Gtk.AttachOptions)(4));
            // Container child table1.Gtk.Table+TableChild
            Gtk.Label w23 = new Gtk.Label();
            bindings["label4"] = w23;
            w23.Name = "label4";
            w23.LabelProp = "Active:";
            w4.Add(w23);
            Gtk.Table.TableChild w24 = ((Gtk.Table.TableChild)(w4[w23]));
            w24.TopAttach = ((uint)(4));
            w24.BottomAttach = ((uint)(5));
            w24.XOptions = ((Gtk.AttachOptions)(4));
            w24.YOptions = ((Gtk.AttachOptions)(4));
            w3.Add(w4);
            Gtk.Box.BoxChild w25 = ((Gtk.Box.BoxChild)(w3[w4]));
            w25.Position = 0;
            w25.Expand = false;
            w25.Fill = false;
            // Container child vbox2.Gtk.Box+BoxChild
            Boxerp.Client.GtkSharp.Lib.DoubleListView w26 = null;
            bindings["dtreeview"] = w26;
            w3.Add(w26);
            Gtk.Box.BoxChild w27 = ((Gtk.Box.BoxChild)(w3[w26]));
            w27.Position = 1;
            w2.Add(w3);
            Gtk.Notebook.NotebookChild w28 = ((Gtk.Notebook.NotebookChild)(w2[w3]));
            w28.TabExpand = false;
            // Notebook tab
            Gtk.Label w29 = new Gtk.Label();
            bindings["label1"] = w29;
            w29.Name = "label1";
            w29.LabelProp = "Properties";
            w2.SetTabLabel(w3, w29);
            // Container child notebook1.Gtk.Notebook+NotebookChild
            Gtk.VBox w30 = new Gtk.VBox();
            bindings["vbox3"] = w30;
            w30.Name = "vbox3";
            w2.Add(w30);
            Gtk.Notebook.NotebookChild w31 = ((Gtk.Notebook.NotebookChild)(w2[w30]));
            w31.Position = 1;
            w31.TabExpand = false;
            // Notebook tab
            Gtk.Label w32 = new Gtk.Label();
            bindings["label1"] = w32;
            w32.Name = "label1";
            w32.LabelProp = "Permissions";
            w2.SetTabLabel(w30, w32);
            w1.Add(w2);
            Gtk.Box.BoxChild w33 = ((Gtk.Box.BoxChild)(w1[w2]));
            w33.Position = 0;
            w33.Padding = ((uint)(5));
            // Container child vbox1.Gtk.Box+BoxChild
            Gtk.HButtonBox w34 = new Gtk.HButtonBox();
            bindings["hbuttonbox1"] = w34;
            w34.Name = "hbuttonbox1";
            w34.Spacing = 2;
            w34.BorderWidth = ((uint)(5));
            w34.LayoutStyle = ((Gtk.ButtonBoxStyle)(4));
            // Container child hbuttonbox1.Gtk.ButtonBox+ButtonBoxChild
            Gtk.Button w35 = new Gtk.Button();
            bindings["buttonCancel"] = w35;
            w35.CanFocus = true;
            w35.Name = "buttonCancel";
            // Container child buttonCancel.Gtk.Container+ContainerChild
            Gtk.Alignment w36 = new Gtk.Alignment(0.5F, 0.5F, 0F, 0F);
            bindings["GtkAlignment"] = w36;
            w36.Name = "GtkAlignment";
            // Container child GtkAlignment.Gtk.Container+ContainerChild
            Gtk.HBox w37 = new Gtk.HBox();
            bindings["GtkHBox"] = w37;
            w37.Name = "GtkHBox";
            w37.Spacing = 2;
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Image w38 = new Gtk.Image();
            bindings["image28"] = w38;
            w38.Name = "image28";
            w38.Pixbuf = Stetic.IconLoader.LoadIcon("gtk-cancel", 16);
            w37.Add(w38);
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Label w40 = new Gtk.Label();
            bindings["GtkLabel"] = w40;
            w40.Name = "GtkLabel";
            w40.LabelProp = Mono.Unix.Catalog.GetString("Cancel");
            w37.Add(w40);
            w36.Add(w37);
            w35.Add(w36);
            w34.Add(w35);
            Gtk.ButtonBox.ButtonBoxChild w44 = ((Gtk.ButtonBox.ButtonBoxChild)(w34[w35]));
            w44.Expand = false;
            w44.Fill = false;
            // Container child hbuttonbox1.Gtk.ButtonBox+ButtonBoxChild
            Gtk.Button w45 = new Gtk.Button();
            bindings["buttonOk"] = w45;
            w45.CanFocus = true;
            w45.Name = "buttonOk";
            // Container child buttonOk.Gtk.Container+ContainerChild
            Gtk.Alignment w46 = new Gtk.Alignment(0.5F, 0.5F, 0F, 0F);
            bindings["GtkAlignment"] = w46;
            w46.Name = "GtkAlignment";
            // Container child GtkAlignment.Gtk.Container+ContainerChild
            Gtk.HBox w47 = new Gtk.HBox();
            bindings["GtkHBox"] = w47;
            w47.Name = "GtkHBox";
            w47.Spacing = 2;
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Image w48 = new Gtk.Image();
            bindings["image29"] = w48;
            w48.Name = "image29";
            w48.Pixbuf = Stetic.IconLoader.LoadIcon("gtk-ok", 16);
            w47.Add(w48);
            // Container child GtkHBox.Gtk.Container+ContainerChild
            Gtk.Label w50 = new Gtk.Label();
            bindings["GtkLabel"] = w50;
            w50.Name = "GtkLabel";
            w50.LabelProp = Mono.Unix.Catalog.GetString("Ok");
            w47.Add(w50);
            w46.Add(w47);
            w45.Add(w46);
            w34.Add(w45);
            Gtk.ButtonBox.ButtonBoxChild w54 = ((Gtk.ButtonBox.ButtonBoxChild)(w34[w45]));
            w54.Position = 1;
            w54.Expand = false;
            w54.Fill = false;
            w1.Add(w34);
            Gtk.Box.BoxChild w55 = ((Gtk.Box.BoxChild)(w1[w34]));
            w55.PackType = ((Gtk.PackType)(1));
            w55.Position = 1;
            w55.Expand = false;
            w55.Fill = false;
            cobj.Add(w1);
            if ((cobj.Child != null)) {
                cobj.Child.ShowAll();
            }
            cobj.DefaultWidth = 400;
            cobj.DefaultHeight = 273;
            cobj.Show();
            cobj.DeleteEvent += ((Gtk.DeleteEventHandler)(System.Delegate.CreateDelegate(typeof(Gtk.DeleteEventHandler), cobj, "OnClose")));
            w35.Clicked += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnCancelClicked")));
            w45.Clicked += ((System.EventHandler)(System.Delegate.CreateDelegate(typeof(System.EventHandler), cobj, "OnOkClicked")));
            System.Reflection.FieldInfo[] fields = cobj.GetType().GetFields(((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic) | System.Reflection.BindingFlags.Instance));
            for (int n = 0; (n < fields.Length); n = (n + 1)) {
                System.Reflection.FieldInfo field = fields[n];
                object widget = bindings[field.Name];
                if (((widget != null) && field.FieldType.IsInstanceOfType(widget))) {
                    field.SetValue(cobj, widget);
                }
            }
        }
    }
}
