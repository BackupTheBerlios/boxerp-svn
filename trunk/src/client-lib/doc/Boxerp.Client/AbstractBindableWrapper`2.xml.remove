<Type Name="AbstractBindableWrapper&lt;T,Y&gt;" FullName="Boxerp.Client.AbstractBindableWrapper&lt;T,Y&gt;">
  <TypeSignature Language="C#" Value="public abstract class AbstractBindableWrapper&lt;T,Y&gt; : Boxerp.Client.IBindableWrapper&lt;T,Y&gt;" />
  <AssemblyInfo>
    <AssemblyName>Boxerp.Client</AssemblyName>
    <AssemblyVersion>0.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter>T</TypeParameter>
    <TypeParameter>Y</TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Boxerp.Client.IBindableWrapper&lt;T,Y&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">To be added.</typeparam>
    <typeparam name="Y">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AbstractBindableWrapper (T businessObj);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="businessObj" Type="T" />
      </Parameters>
      <Docs>
        <param name="businessObj">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AbstractBindableWrapper (T businessObj, bool disableInterception);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="businessObj" Type="T" />
        <Parameter Name="disableInterception" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="businessObj">To be added.</param>
        <param name="disableInterception">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AbstractBindableWrapper (T businessObj, object[] constructorParams);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="businessObj" Type="T" />
        <Parameter Name="constructorParams" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="businessObj">To be added.</param>
        <param name="constructorParams">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AbstractBindableWrapper (T businessObj, bool disableWrapperInterception, bool disableBusinessObjectInterception);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="businessObj" Type="T" />
        <Parameter Name="disableWrapperInterception" Type="System.Boolean" />
        <Parameter Name="disableBusinessObjectInterception" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="businessObj">To be added.</param>
        <param name="disableWrapperInterception">To be added.</param>
        <param name="disableBusinessObjectInterception">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AbstractBindableWrapper (T businessObj, bool disableInterception, object[] constructorParams);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="businessObj" Type="T" />
        <Parameter Name="disableInterception" Type="System.Boolean" />
        <Parameter Name="constructorParams" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="businessObj">To be added.</param>
        <param name="disableInterception">To be added.</param>
        <param name="constructorParams">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AbstractBindableWrapper (T businessObj, bool disableWrapperInterception, bool disableBOInterception, bool disableUndoRedo);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="businessObj" Type="T" />
        <Parameter Name="disableWrapperInterception" Type="System.Boolean" />
        <Parameter Name="disableBOInterception" Type="System.Boolean" />
        <Parameter Name="disableUndoRedo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="businessObj">To be added.</param>
        <param name="disableWrapperInterception">To be added.</param>
        <param name="disableBOInterception">To be added.</param>
        <param name="disableUndoRedo">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AbstractBindableWrapper (T businessObj, bool disableWrapperInterception, bool disableBusinessObjectInterception, bool disableUndoRedo, object[] constructorParams);" />
      <MemberType>Constructor</MemberType>
      <Parameters>
        <Parameter Name="businessObj" Type="T" />
        <Parameter Name="disableWrapperInterception" Type="System.Boolean" />
        <Parameter Name="disableBusinessObjectInterception" Type="System.Boolean" />
        <Parameter Name="disableUndoRedo" Type="System.Boolean" />
        <Parameter Name="constructorParams" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="businessObj">To be added.</param>
        <param name="disableWrapperInterception">To be added.</param>
        <param name="disableBusinessObjectInterception">To be added.</param>
        <param name="disableUndoRedo">To be added.</param>
        <param name="constructorParams">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="cloneBindable">
      <MemberSignature Language="C#" Value="protected virtual Y cloneBindable ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>Y</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="copyBindableProperties">
      <MemberSignature Language="C#" Value="protected virtual void copyBindableProperties (Y source);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Y" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="copyBOtoProxy">
      <MemberSignature Language="C#" Value="protected virtual void copyBOtoProxy (T businessObj);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="businessObj" Type="T" />
      </Parameters>
      <Docs>
        <param name="businessObj">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="copyBusinessObjectProperties">
      <MemberSignature Language="C#" Value="protected virtual void copyBusinessObjectProperties (T source);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="T" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public Y Data { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>Y</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWrappedObjectType">
      <MemberSignature Language="C#" Value="public Type GetWrappedObjectType ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasSubscribers">
      <MemberSignature Language="C#" Value="public bool HasSubscribers { get; };" />
      <MemberType>Property</MemberType>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="initializeProxyFromBusinessObject">
      <MemberSignature Language="C#" Value="protected virtual void initializeProxyFromBusinessObject (T source);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="T" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Intercept">
      <MemberSignature Language="C#" Value="public void Intercept (Castle.Core.Interceptor.IInvocation invocation);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invocation" Type="Castle.Core.Interceptor.IInvocation" />
      </Parameters>
      <Docs>
        <param name="invocation">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;" />
      <MemberType>Event</MemberType>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Redo">
      <MemberSignature Language="C#" Value="public virtual void Redo ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshBusinessObj">
      <MemberSignature Language="C#" Value="public void RefreshBusinessObj (T businessObj);" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="businessObj" Type="T" />
      </Parameters>
      <Docs>
        <param name="businessObj">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public virtual void Undo ();" />
      <MemberType>Method</MemberType>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
