// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 2.0.50727.42
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------

namespace Stetic {
    
    internal class Gui {
        
        public static void Build(object obj, System.Type type) {
            Stetic.Gui.Build(obj, type.FullName);
        }
        
        public static void Build(object obj, string id) {
            System.Collections.Hashtable bindings = new System.Collections.Hashtable();
            if ((id == "MainWindow")) {
                Gtk.Window cobj = ((Gtk.Window)(obj));
                // Widget MainWindow
                cobj.Title = "MainWindow";
                cobj.WindowPosition = ((Gtk.WindowPosition)(4));
                cobj.Events = ((Gdk.EventMask)(0));
                cobj.Name = "MainWindow";
                cobj.DefaultWidth = 400;
                cobj.DefaultHeight = 300;
                bindings["MainWindow"] = cobj;
                cobj.Show();
                cobj.DeleteEvent += ((Gtk.DeleteEventHandler)(System.Delegate.CreateDelegate(typeof(Gtk.DeleteEventHandler), cobj, "OnDeleteEvent")));
            }
            else {
                if ((id == "widgets.WarningDialog")) {
                    Gtk.Dialog cobj = ((Gtk.Dialog)(obj));
                    // Widget widgets.WarningDialog
                    cobj.Title = "WarningDialog";
                    cobj.WindowPosition = ((Gtk.WindowPosition)(4));
                    cobj.HasSeparator = false;
                    cobj.Events = ((Gdk.EventMask)(256));
                    cobj.Name = "widgets.WarningDialog";
                    // Internal child widgets.WarningDialog.VBox
                    Gtk.VBox w1 = cobj.VBox;
                    w1.BorderWidth = ((uint)(2));
                    w1.Events = ((Gdk.EventMask)(256));
                    w1.Name = "dialog_VBox";
                    bindings["dialog_VBox"] = w1;
                    // Internal child widgets.WarningDialog.ActionArea
                    Gtk.HButtonBox w2 = cobj.ActionArea;
                    w2.LayoutStyle = ((Gtk.ButtonBoxStyle)(4));
                    w2.Events = ((Gdk.EventMask)(256));
                    w2.Name = "widgets.WarningDialog_ActionArea";
                    // Container child widgets.WarningDialog_ActionArea.Gtk.ButtonBox+ButtonBoxChild
                    Gtk.Button w3 = new Gtk.Button();
                    w3.CanFocus = true;
                    w3.Events = ((Gdk.EventMask)(0));
                    w3.Name = "button3";
                    w3.CanDefault = true;
                    w3.Label = "button3";
                    bindings["button3"] = w3;
                    cobj.AddActionWidget(w3, 0);
                    Gtk.ButtonBox.ButtonBoxChild w4 = ((Gtk.ButtonBox.ButtonBoxChild)(w2[w3]));
                    w4.Expand = false;
                    w4.Fill = false;
                    bindings["widgets.WarningDialog_ActionArea"] = w2;
                    cobj.DefaultWidth = 400;
                    cobj.DefaultHeight = 300;
                    bindings["widgets.WarningDialog"] = cobj;
                    w1.Show();
                    w3.Show();
                    w2.Show();
                    cobj.Show();
                }
                else {
                    if ((id == "widgets.WaitWindow")) {
                        Gtk.Window cobj = ((Gtk.Window)(obj));
                        // Widget widgets.WaitWindow
                        cobj.Title = "Operation in progress...";
                        cobj.WindowPosition = ((Gtk.WindowPosition)(4));
                        cobj.Events = ((Gdk.EventMask)(0));
                        cobj.Name = "widgets.WaitWindow";
                        // Container child widgets.WaitWindow.Gtk.Container+ContainerChild
                        Gtk.VBox w1 = new Gtk.VBox();
                        w1.Spacing = 2;
                        w1.BorderWidth = ((uint)(5));
                        w1.Events = ((Gdk.EventMask)(256));
                        w1.Name = "vbox";
                        // Container child vbox.Gtk.Box+BoxChild
                        Gtk.Label w2 = new Gtk.Label();
                        w2.LabelProp = "label1";
                        w2.Events = ((Gdk.EventMask)(0));
                        w2.Name = "labelMsg";
                        bindings["labelMsg"] = w2;
                        w1.Add(w2);
                        Gtk.Box.BoxChild w3 = ((Gtk.Box.BoxChild)(w1[w2]));
                        w3.Position = 0;
                        w3.Expand = false;
                        w3.Fill = false;
                        // Container child vbox.Gtk.Box+BoxChild
                        Gtk.ProgressBar w4 = new Gtk.ProgressBar();
                        w4.Events = ((Gdk.EventMask)(0));
                        w4.Name = "progressbar";
                        bindings["progressbar"] = w4;
                        w1.Add(w4);
                        Gtk.Box.BoxChild w5 = ((Gtk.Box.BoxChild)(w1[w4]));
                        w5.Position = 1;
                        w5.Expand = false;
                        w5.Fill = false;
                        bindings["vbox"] = w1;
                        cobj.Add(w1);
                        cobj.DefaultWidth = 400;
                        cobj.DefaultHeight = 78;
                        bindings["widgets.WaitWindow"] = cobj;
                        w2.Show();
                        w4.Show();
                        w1.Show();
                        cobj.Show();
                    }
                    else {
                        if ((id == "widgets.WaitDialog")) {
                            Gtk.Dialog cobj = ((Gtk.Dialog)(obj));
                            // Widget widgets.WaitDialog
                            cobj.Title = "Operation in progress...";
                            cobj.WindowPosition = ((Gtk.WindowPosition)(4));
                            cobj.HasSeparator = false;
                            cobj.Resizable = false;
                            cobj.AllowGrow = false;
                            cobj.Events = ((Gdk.EventMask)(256));
                            cobj.Name = "widgets.WaitDialog";
                            // Internal child widgets.WaitDialog.VBox
                            Gtk.VBox w1 = cobj.VBox;
                            w1.Spacing = 2;
                            w1.BorderWidth = ((uint)(5));
                            w1.Events = ((Gdk.EventMask)(256));
                            w1.Name = "dialog_VBox";
                            // Container child dialog_VBox.Gtk.Box+BoxChild
                            Gtk.Label w2 = new Gtk.Label();
                            w2.LabelProp = "label1";
                            w2.Events = ((Gdk.EventMask)(0));
                            w2.Name = "labelMsg";
                            bindings["labelMsg"] = w2;
                            w1.Add(w2);
                            Gtk.Box.BoxChild w3 = ((Gtk.Box.BoxChild)(w1[w2]));
                            w3.Position = 0;
                            w3.Expand = false;
                            w3.Fill = false;
                            // Container child dialog_VBox.Gtk.Box+BoxChild
                            Gtk.ProgressBar w4 = new Gtk.ProgressBar();
                            w4.Events = ((Gdk.EventMask)(0));
                            w4.Name = "progressbar";
                            bindings["progressbar"] = w4;
                            w1.Add(w4);
                            Gtk.Box.BoxChild w5 = ((Gtk.Box.BoxChild)(w1[w4]));
                            w5.Position = 1;
                            w5.Expand = false;
                            w5.Fill = false;
                            bindings["dialog_VBox"] = w1;
                            // Internal child widgets.WaitDialog.ActionArea
                            Gtk.HButtonBox w6 = cobj.ActionArea;
                            w6.LayoutStyle = ((Gtk.ButtonBoxStyle)(4));
                            w6.Spacing = 10;
                            w6.BorderWidth = ((uint)(5));
                            w6.Events = ((Gdk.EventMask)(256));
                            w6.Name = "actionArea";
                            // Container child actionArea.Gtk.ButtonBox+ButtonBoxChild
                            Gtk.Button w7 = new Gtk.Button();
                            w7.CanFocus = true;
                            w7.Events = ((Gdk.EventMask)(0));
                            w7.Name = "button";
                            w7.CanDefault = true;
                            w7.Label = "button1";
                            bindings["button"] = w7;
                            cobj.AddActionWidget(w7, 0);
                            Gtk.ButtonBox.ButtonBoxChild w8 = ((Gtk.ButtonBox.ButtonBoxChild)(w6[w7]));
                            w8.Expand = false;
                            w8.Fill = false;
                            bindings["actionArea"] = w6;
                            cobj.DefaultWidth = 400;
                            cobj.DefaultHeight = 119;
                            bindings["widgets.WaitDialog"] = cobj;
                            w2.Show();
                            w4.Show();
                            w1.Show();
                            w6.Show();
                            cobj.Show();
                        }
                        else {
                            if ((id == "widgets.InfoDialog")) {
                                Gtk.Dialog cobj = ((Gtk.Dialog)(obj));
                                // Widget widgets.InfoDialog
                                cobj.Title = "InfoDialog";
                                cobj.WindowPosition = ((Gtk.WindowPosition)(4));
                                cobj.HasSeparator = false;
                                cobj.Events = ((Gdk.EventMask)(256));
                                cobj.Name = "widgets.InfoDialog";
                                // Internal child widgets.InfoDialog.VBox
                                Gtk.VBox w1 = cobj.VBox;
                                w1.BorderWidth = ((uint)(2));
                                w1.Events = ((Gdk.EventMask)(256));
                                w1.Name = "dialog_VBox";
                                bindings["dialog_VBox"] = w1;
                                // Internal child widgets.InfoDialog.ActionArea
                                Gtk.HButtonBox w2 = cobj.ActionArea;
                                w2.LayoutStyle = ((Gtk.ButtonBoxStyle)(4));
                                w2.Events = ((Gdk.EventMask)(256));
                                w2.Name = "widgets.InfoDialog_ActionArea";
                                // Container child widgets.InfoDialog_ActionArea.Gtk.ButtonBox+ButtonBoxChild
                                Gtk.Button w3 = new Gtk.Button();
                                w3.CanFocus = true;
                                w3.Events = ((Gdk.EventMask)(0));
                                w3.Name = "button5";
                                w3.CanDefault = true;
                                w3.Label = "button5";
                                bindings["button5"] = w3;
                                cobj.AddActionWidget(w3, 0);
                                Gtk.ButtonBox.ButtonBoxChild w4 = ((Gtk.ButtonBox.ButtonBoxChild)(w2[w3]));
                                w4.Expand = false;
                                w4.Fill = false;
                                bindings["widgets.InfoDialog_ActionArea"] = w2;
                                cobj.DefaultWidth = 400;
                                cobj.DefaultHeight = 300;
                                bindings["widgets.InfoDialog"] = cobj;
                                w1.Show();
                                w3.Show();
                                w2.Show();
                                cobj.Show();
                            }
                            else {
                                if ((id == "widgets.InfoExtendedDialog")) {
                                    Gtk.Dialog cobj = ((Gtk.Dialog)(obj));
                                    // Widget widgets.InfoExtendedDialog
                                    cobj.Title = "InfoExtendedDialog";
                                    cobj.WindowPosition = ((Gtk.WindowPosition)(4));
                                    cobj.HasSeparator = false;
                                    cobj.Events = ((Gdk.EventMask)(256));
                                    cobj.Name = "widgets.InfoExtendedDialog";
                                    // Internal child widgets.InfoExtendedDialog.VBox
                                    Gtk.VBox w1 = cobj.VBox;
                                    w1.BorderWidth = ((uint)(2));
                                    w1.Events = ((Gdk.EventMask)(256));
                                    w1.Name = "dialog_VBox";
                                    bindings["dialog_VBox"] = w1;
                                    // Internal child widgets.InfoExtendedDialog.ActionArea
                                    Gtk.HButtonBox w2 = cobj.ActionArea;
                                    w2.LayoutStyle = ((Gtk.ButtonBoxStyle)(4));
                                    w2.Events = ((Gdk.EventMask)(256));
                                    w2.Name = "widgets.InfoExtendedDialog_ActionArea";
                                    // Container child widgets.InfoExtendedDialog_ActionArea.Gtk.ButtonBox+ButtonBoxChild
                                    Gtk.Button w3 = new Gtk.Button();
                                    w3.CanFocus = true;
                                    w3.Events = ((Gdk.EventMask)(0));
                                    w3.Name = "button7";
                                    w3.CanDefault = true;
                                    w3.Label = "button7";
                                    bindings["button7"] = w3;
                                    cobj.AddActionWidget(w3, 0);
                                    Gtk.ButtonBox.ButtonBoxChild w4 = ((Gtk.ButtonBox.ButtonBoxChild)(w2[w3]));
                                    w4.Expand = false;
                                    w4.Fill = false;
                                    bindings["widgets.InfoExtendedDialog_ActionArea"] = w2;
                                    cobj.DefaultWidth = 400;
                                    cobj.DefaultHeight = 300;
                                    bindings["widgets.InfoExtendedDialog"] = cobj;
                                    w1.Show();
                                    w3.Show();
                                    w2.Show();
                                    cobj.Show();
                                }
                            }
                        }
                    }
                }
            }
            System.Reflection.FieldInfo[] fields = obj.GetType().GetFields(((System.Reflection.BindingFlags.Public | System.Reflection.BindingFlags.NonPublic) | System.Reflection.BindingFlags.Instance));
            for (int n = 0; (n < fields.Length); n = (n + 1)) {
                System.Reflection.FieldInfo field = fields[n];
                object widget = bindings[field.Name];
                if (((widget != null) && field.FieldType.IsInstanceOfType(widget))) {
                    field.SetValue(obj, widget);
                }
            }
        }
    }
    
    internal class ActionGroups {
        
        public static Gtk.ActionGroup GetActionGroup(System.Type type) {
            return Stetic.ActionGroups.GetActionGroup(type.FullName);
        }
        
        public static Gtk.ActionGroup GetActionGroup(string name) {
            return null;
        }
    }
    
}
